name: Keep Database Active

on:
  schedule:
    # Run every 3 days at 12:00 UTC
    - cron: '0 12 */3 * *'
  workflow_dispatch: # Allow manual triggering

jobs:
  ping-website:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
      - name: Ping Deployed Application
        env:
          WEBSITE_URL: https://voice-lms.vercel.app/
        run: |
          echo "🔄 Pinging deployed application..."
          echo "🌐 URL: $WEBSITE_URL"
          
          # Ping the homepage to trigger database activity
          response=$(curl -s -o /dev/null -w "%{http_code}" "$WEBSITE_URL" || echo "000")
          
          if [ "$response" = "200" ]; then
            echo "✅ Homepage ping successful! (HTTP $response)"
          else
            echo "⚠️ Homepage returned HTTP $response, trying API endpoint..."
            
            # Try hitting an API endpoint that definitely uses the database
            api_response=$(curl -s -o /dev/null -w "%{http_code}" "$WEBSITE_URL/api/health" || echo "000")
            
            if [ "$api_response" = "200" ] || [ "$api_response" = "404" ]; then
              echo "✅ API endpoint reached! (HTTP $api_response)"
            else
              echo "❌ Both homepage and API failed"
              echo "Homepage: HTTP $response"
              echo "API: HTTP $api_response"
              exit 1
            fi
          fi

      - name: Log Success
        run: |
          echo "✅ Database keep-alive completed at $(date -u)"
          echo "⏰ Next ping scheduled in 3 days"

      - name: Create Summary
        run: |
          echo "## 🎯 Database Keep-Alive Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ✅ Success" >> $GITHUB_STEP_SUMMARY
          echo "- **Method**: HTTP request to deployed app" >> $GITHUB_STEP_SUMMARY
          echo "- **Timestamp**: $(date -u)" >> $GITHUB_STEP_SUMMARY
          echo "- **Next Run**: $(date -u -d '+3 days')" >> $GITHUB_STEP_SUMMARY
